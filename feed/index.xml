<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Recursive</title>
 <link href="http://recursive-design.com/feed/" rel="self"/>
 <link href="http://recursive-design.com/"/>
 <updated>2012-03-04T22:15:30+07:00</updated>
 <id>http://recursive-design.com/</id>
 <author>
   <name>Recursive</name>
   <email>mail@recursive-design.com</email>
 </author>

 
 <entry>
   <title>Benchmark cramp, node.js dan rails</title>
   <link href="http://recursive-design.com/id/2012/03/benchmark-cramp-node-dot-js-dan-rails.html"/>
   <updated>2012-03-01T15:01:00+07:00</updated>
   <id>http://recursive-design.com/id/2012/03/benchmark-cramp-node-dot-js-dan-rails</id>
   <content type="html">&lt;p&gt;Bagi yang sering men-&lt;em&gt;develop&lt;/em&gt; aplikasi rails, terkadang muncul kebutuhan untuk mengimplementasi API untuk memberikan akses terhadap data
pada aplikasi tersebut. Ada yang mengimplementasi API dengan framework yang sama (rails), namun ada juga yang menggunakan platform yang
berbeda untuk mengimplementasi API tersebut. Ada yang menggunakan node.js, sinatra, cramp dlll.&lt;/p&gt;

&lt;p&gt;Baru-baru ini ada diskusi yang menarik pada milis &lt;a href=&quot;http://id-ruby.org/&quot;&gt;#id-ruby&lt;/a&gt; mengenai cramp. Nah untuk mencari tahu bagaimana performa masing-masing
aplikasi tersebut saya kepikiran untuk melakukan benchmark (pengukuran) mengenai kinerja dan performa dari masing-masing framework. Aspek yang
ingin saya ukur terutama adalah kecepatan response yang dihasilkan masing-masing framework. Baik saat tanpa proses IO, dengan proses IO maupun
dengan melakukan operasi terhadap database (Select, Insert, update Dan delete).&lt;/p&gt;

&lt;p&gt;Masing-masing implementasi akan saya buat di posting yang berbeda. Sedangkan untuk melakukan pengujian, saya akan mempush masing-masing aplikasi
ke [heroku.com][heroku] dan melakukan pengujian dengan &lt;a href=&quot;http://blitz.io&quot;&gt;blitz.io&lt;/a&gt;. Heroku adalah Platform yang bisa menjalankan aplikasi berbasis Ruby,
Php java dll. Sedangkan blitz.io adalah service yang melakukan load testing &amp;amp; benchmark terhadap aplikasi web.
Keduanya berjalan pada infrastruktur Amazon AWS sehingga seharusnya tidak delay network yang berarti.&lt;/p&gt;

&lt;p&gt;Aplikasi yang akan dibuat sebenarnya cukup sederhana. Sebuah aplikasi yang melakukan pencatatan terhadap &lt;em&gt;expense&lt;/em&gt;. Aplikasi ini hanya melakukan
operasi CRUD seperti biasa. Setelah masing-masing aplikasi ini dibuat, barulah akan dilakukan pengujian. Masing-masing pengerjaan pada aplikasi
tersebut nanti akan buat dalam 3 artikel yang berbeda :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Aplikasi Benchmark dalam Cramp&lt;/li&gt;
&lt;li&gt;Aplikasi Benchmark dalam Node.js&lt;/li&gt;
&lt;li&gt;Aplikasi Benchmark dalam Rails&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Setelah dilakukan pengukuran, maka saya akan mengupdate artikel ini.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Ruby Fiber apaan sih ?</title>
   <link href="http://recursive-design.com/id/2012/02/ruby-fiber-apaan-sih.html"/>
   <updated>2012-02-29T15:16:00+07:00</updated>
   <id>http://recursive-design.com/id/2012/02/ruby-fiber-apaan-sih</id>
   <content type="html">&lt;blockquote&gt;
  &lt;p&gt;
    Fibers are light-weight (green) &lt;a href=&quot;http://en.wikipedia.org/wiki/Thread_(computing)&quot; alt=&quot;wiki Thread (Computing)&quot;&gt;
      threads&lt;/a&gt; with manual, cooperative scheduling, rather than the preemptive scheduling 
    of Ruby 1.8's threads. Since Ruby 1.9's threads exist at the system level, fibers are, in a way, 
    Ruby 1.9's answer to Ruby 1.8's green threads, but lacking the pre-emptive scheduling
  &lt;/p&gt;
  &lt;small&gt;
    &lt;a href=&quot;http://www.rubyinside.com/ruby-fibers-8-useful-reads-on-rubys-new-concurrency-feature-1769.html&quot;&gt;
      rubyinside.com
    &lt;/a&gt;
  &lt;/small&gt;
&lt;/blockquote&gt;




&lt;h2&gt;Thread&lt;/h2&gt;


&lt;p&gt;Untuk dapat mengerti mengenai fiber, sebelumnya kita harus memahami thread. Suatu (&lt;em&gt;instance&lt;/em&gt;) program yang sedang berjalan
disebut dengan proses. thread adalah unit proses (potongan kode) yang dapat dijalankan secara simultan. Jadi sekan-akan
program tersebut bercabang.&lt;/p&gt;

&lt;p&gt;Ambil contoh program Web Server yang diimplementasi menggunakan thread. Fungsi Web Server (WS) adalah menerima request dan
memberikan response kepada web browser. Misalkan WS tersebut hanya memiliki 1 proses, maka apabila ada 10 user yang melakukan
request, maka mereka harus mengantri untuk menerima response dari server. Hal ini bisa diatasi salah satunya dengan menggunakan
thread. Apabila terdapat suatu request, maka proses utama membuat (&lt;em&gt;spawn&lt;/em&gt;) suatu thread untuk menangani request tersebut.
Misalkan ada 10 request disaat yang bersamaan, maka terdapat 10 thread yang jalan disaat yang bersamaan. Dalam kasus ini
maka 10 user tersebut akan dilayani pada waktu yang bersamaan.&lt;/p&gt;

&lt;p&gt;Ruby 1.8.7 (MRI) memiliki tipe &lt;em&gt;green thread&lt;/em&gt;, yaitu thread yang dikelola oleh &lt;em&gt;Virtual Machine&lt;/em&gt; sedangkan normalnya thread
dikelola oleh &lt;em&gt;Operating System&lt;/em&gt; (OS) atau &lt;em&gt;native thread&lt;/em&gt;. Namun implementasi threads untuk tiap interpreter berbeda. Misalkan
pada JRuby dan Rubinius yang menggunakan native threads.&lt;/p&gt;

&lt;p&gt;Eksekusi setiap threads dikelola oleh program yang dinamakan &lt;em&gt;scheduler&lt;/em&gt;. &lt;em&gt;preemptive scheduling&lt;/em&gt; adalah suatu metode
yang digunakan &lt;em&gt;scheduler&lt;/em&gt; dengan memanfaatkan &lt;em&gt;interrupt&lt;/em&gt;. Artinya scheduler mengirimkan &lt;em&gt;interrupt&lt;/em&gt; kepada suatu thread
untuk berhenti dan menjalankan thread lain. secara default MRI menggunakan &lt;em&gt;fair scheduler&lt;/em&gt;. Artinya masing-masing thread
akan dijadwalkan (dijalankan) dengan waktu yang sama.&lt;/p&gt;

&lt;h2&gt;Fiber&lt;/h2&gt;


&lt;p&gt;Fiber adalah fitur yang pertamakali diperkenalkan pada ruby 1.9 (Meskipun ada hack untuk ruby 1.8.{67}).
Fiber mirip dengan thread. Namun pada fiber, user yang memiliki kontrol terhadap eksekusi kode, bukan &lt;em&gt;scheduler&lt;/em&gt;.
setiap fiber memiliki 4Kb memori sehingga cukup &quot;murah&quot; untuk dibuat. Berikut adalah contoh dari (igvita.com).&lt;/p&gt;

&lt;p&gt;Terdapat 2 thread: Thread pertama melakukan io-blocking selama 40ms dan komputasi 10ms. sedangkan
thread kedua melakukan 50ms komputasi.&lt;/p&gt;

&lt;p&gt;Berikut adalah implementasi dalam thread dan juga fiber:&lt;/p&gt;

&lt;div class=&quot;thumbnail&quot;&gt;
  &lt;img src=&quot;http://www.igvita.com/posts/09/fibers-vs-threads.png&quot;&gt;&lt;/img&gt;
  &lt;div class=&quot;caption&quot;&gt;
    Komparasi kode yang dijalankan menggunakan thread &amp; fiber. 
    &lt;a href=&quot;http://www.igvita.com/2009/05/13/fibers-cooperative-scheduling-in-ruby/&quot;&gt;http://www.igvita.com/2009/05/13/fibers-cooperative-scheduling-in-ruby/&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;br/&gt;


&lt;p&gt;Pada contoh pertama, thread 2 memakan waktu 100ms, sedangkan pada contoh yang kedua hanya memakan waktu 60ms.&lt;/p&gt;

&lt;p&gt;Dengan menggunakan fiber, program berjalan sekan-akan sychronous (blocking). Oleh karena itu fiber
merupakan kandidat yang cocok untuk diterapkan pada pemograman &lt;em&gt;Event-Driven&lt;/em&gt; atau &lt;em&gt;Asynchronous programming&lt;/em&gt; seperti
pada &lt;em&gt;EventMachine&lt;/em&gt; di ruby&lt;/p&gt;

&lt;h2&gt;Cara Menggunakan Fiber&lt;/h2&gt;


&lt;p&gt;Untuk dapat memahami fiber, kita ambil contoh seperti berikut. Program ini sebenarnya tidak berguna, tapi cukup untuk
mendemonstrasikan alur penggunaan fiber&lt;/p&gt;

&lt;div class='bogus-wrapper'&gt;&lt;notextile&gt;&lt;figure class='code'&gt; &lt;div class='highlight ruby'&gt;&lt;table&gt;&lt;tr&gt;&lt;td class='gutter'&gt;&lt;pre class='line-numbers'&gt;&lt;span class='line-number'&gt;1&lt;/span&gt;
&lt;span class='line-number'&gt;2&lt;/span&gt;
&lt;span class='line-number'&gt;3&lt;/span&gt;
&lt;span class='line-number'&gt;4&lt;/span&gt;
&lt;span class='line-number'&gt;5&lt;/span&gt;
&lt;span class='line-number'&gt;6&lt;/span&gt;
&lt;span class='line-number'&gt;7&lt;/span&gt;
&lt;span class='line-number'&gt;8&lt;/span&gt;
&lt;span class='line-number'&gt;9&lt;/span&gt;
&lt;span class='line-number'&gt;10&lt;/span&gt;
&lt;span class='line-number'&gt;11&lt;/span&gt;
&lt;span class='line-number'&gt;12&lt;/span&gt;
&lt;span class='line-number'&gt;13&lt;/span&gt;
&lt;span class='line-number'&gt;14&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class='code'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;&lt;span class='line'&gt;  &lt;span class=&quot;n&quot;&gt;fiber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Fiber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;span class='line'&gt;    &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Fiber: Beginning of fiber&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class='line'&gt;    &lt;span class=&quot;no&quot;&gt;Fiber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# kembalikan eksekusi ke main (line 11)&lt;/span&gt;
&lt;/span&gt;&lt;span class='line'&gt;    &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Fiber: Halo main, saya fiber&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class='line'&gt;    &lt;span class=&quot;no&quot;&gt;Fiber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# kembalikan eksekusi ke main (line 13)&lt;/span&gt;
&lt;/span&gt;&lt;span class='line'&gt;    &lt;span class=&quot;no&quot;&gt;Fiber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Fiber: Sekarang &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_s&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class='line'&gt;  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class='line'&gt;
&lt;/span&gt;&lt;span class='line'&gt;  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Main: Beginning main&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class='line'&gt;  &lt;span class=&quot;n&quot;&gt;fiber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resume&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# jalankan fiber (line 2)&lt;/span&gt;
&lt;/span&gt;&lt;span class='line'&gt;  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Main: Hello saya main thread&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class='line'&gt;  &lt;span class=&quot;n&quot;&gt;fiber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resume&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# jalankan fiber (line 4)&lt;/span&gt;
&lt;/span&gt;&lt;span class='line'&gt;  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Main: Sekarang jam berapa ya ?&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class='line'&gt;  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fiber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resume&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# jalankan fiber (line 6) dan output hasil  &lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;pre&gt;&lt;code&gt; Main: Beginning main
 Fiber: Beginning of fiber
 Main: Hello saya main thread
 Fiber: Halo main, saya fiber
 Main: Sekarang jam berapa ya ?
 Fiber: Sekarang 2012-02-29 22:45:08 +0700
&lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>Responsive Design</title>
   <link href="http://recursive-design.com/en/2012/02/responsive-design.html"/>
   <updated>2012-02-24T01:47:00+07:00</updated>
   <id>http://recursive-design.com/en/2012/02/responsive-design</id>
   <content type="html">&lt;p&gt;I've been playing around with &lt;a href=&quot;http://twitter.github.com/bootstrap/&quot;&gt;twitter bootstrap&lt;/a&gt;. It's like a css framework to help designer or developer create a nice and clean site.
It's offer grid system, predefine layout, button, javascript, carousel etc. You can build website in just a few hours. Very nice for
prototyping.&lt;/p&gt;

&lt;p&gt;I've been using it to build this blog since it was version 1. Recently i had a chance to upgrade it to version 2.
The new version offer a lot of functionalities, one the feature that I play a lot is the responsive design.&lt;/p&gt;

&lt;p&gt;Basically &lt;a href=&quot;http://en.wikipedia.org/wiki/Responsive_Web_Design&quot;&gt;Responsive Web Design&lt;/a&gt; (RWD) means the ability of the web site to adapt to the user screen size. So the page should look different
in a way that it suited for specific screen. Like this website will look different if it's open with mobile phone, portrait mode on tablet,
landscape mode on tablet, net book or even in a large desktop. This actually achieved by using W3C CSS3 media query. It means that it uses
different stylesheet for each of the screen size. More info on RWD in twitter bootstrap can be found &lt;a href=&quot;http://twitter.github.com/bootstrap/scaffolding.html#responsive&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can test this functionality by resizing your browser window. Try to drag it slowly and watch the page banner slightly change.
here are the screen shoot of the design.&lt;/p&gt;

&lt;ul class=&quot;thumbnails&quot; style=&quot;text-align: center&quot;&gt;
  &lt;li class=&quot;span5&quot;&gt;
    &lt;div class=&quot;thumbnail&quot;&gt;
      &lt;a href=&quot;http://www.flickr.com/photos/77240053@N02/6777836336/&quot; title=&quot;Desktop View by yulrizka, on Flickr&quot;&gt;&lt;img src=&quot;http://farm8.staticflickr.com/7188/6777836336_cfc30a387d.jpg&quot; width=&quot;500&quot; height=&quot;328&quot; alt=&quot;Desktop View&quot;&gt;&lt;/a&gt;
      &lt;div class=&quot;caption&quot;&gt;Desktop View (1210px and up)&lt;/div&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li class=&quot;span5&quot;&gt;
    &lt;div class=&quot;thumbnail&quot;&gt;
      &lt;a href=&quot;http://www.flickr.com/photos/77240053@N02/6777836342/&quot; title=&quot;Tablet Landscape by yulrizka, on Flickr&quot;&gt;&lt;img src=&quot;http://farm8.staticflickr.com/7177/6777836342_2bae8d18f9.jpg&quot; width=&quot;500&quot; height=&quot;403&quot; alt=&quot;Tablet Landscape&quot;&gt;&lt;/a&gt;
      &lt;div class=&quot;caption&quot;&gt;Tablet Landscape (768px to 979px)&lt;/div&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li class=&quot;span4&quot;&gt;
    &lt;div class=&quot;thumbnail&quot;&gt;
      &lt;a href=&quot;http://www.flickr.com/photos/77240053@N02/6777836344/&quot; title=&quot;Tablet View by yulrizka, on Flickr&quot;&gt;&lt;img src=&quot;http://farm8.staticflickr.com/7068/6777836344_04a80d610b_m.jpg&quot; width=&quot;240&quot; height=&quot;237&quot; alt=&quot;Tablet View&quot;&gt;&lt;/a&gt;
      &lt;div class=&quot;caption&quot;&gt;Tablet Portrait (480px to 768px)&lt;/div&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li class=&quot;span4&quot;&gt;
    &lt;div class=&quot;thumbnail&quot;&gt;
      &lt;a href=&quot;http://www.flickr.com/photos/77240053@N02/6777836350/&quot; title=&quot;Tablet with menu by yulrizka, on Flickr&quot;&gt;&lt;img src=&quot;http://farm8.staticflickr.com/7050/6777836350_3a8e661196_m.jpg&quot; width=&quot;240&quot; height=&quot;237&quot; alt=&quot;Tablet with menu&quot;&gt;&lt;/a&gt;
      &lt;div class=&quot;caption&quot;&gt;Tablet Portrait with menu (480px to 768px)&lt;/div&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li class=&quot;span4&quot;&gt;
    &lt;div class=&quot;thumbnail&quot;&gt;
      &lt;a href=&quot;http://www.flickr.com/photos/77240053@N02/6777836354/&quot; title=&quot;Mobile Phone by yulrizka, on Flickr&quot;&gt;&lt;img src=&quot;http://farm8.staticflickr.com/7191/6777836354_aec27fd376_m.jpg&quot; width=&quot;164&quot; height=&quot;240&quot; alt=&quot;Mobile Phone&quot;&gt;&lt;/a&gt;
      &lt;div class=&quot;caption&quot;&gt;Mobile Phone (480px and below)&lt;/div&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li class=&quot;span4&quot;&gt;
    &lt;div class=&quot;thumbnail&quot;&gt;
      &lt;a href=&quot;http://www.flickr.com/photos/77240053@N02/6777836358/&quot; title=&quot;Mobile Phone with menu by yulrizka, on Flickr&quot;&gt;&lt;img src=&quot;http://farm8.staticflickr.com/7205/6777836358_d06448c5da_m.jpg&quot; width=&quot;164&quot; height=&quot;240&quot; alt=&quot;Mobile Phone with menu&quot;&gt;&lt;/a&gt;
      &lt;div class=&quot;caption&quot;&gt;Mobile Phone with Menu(480px and below)&lt;/div&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;



</content>
 </entry>
 
 <entry>
   <title>Jekyll error utf-8 caracter</title>
   <link href="http://recursive-design.com/en/2012/01/jekyll-error-utf-8-caracter.html"/>
   <updated>2012-01-14T17:31:00+07:00</updated>
   <id>http://recursive-design.com/en/2012/01/jekyll-error-utf-8-caracter</id>
   <content type="html">&lt;p&gt;If you having a problem in jekyll when it didn't generate a post and there is no error in the log file.
you might want to check the content if there is any UTF-8 character encoding such as this &lt;strong&gt;±&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The problem arise if you use ruby 1.9. It rejecting a file that contain non-ASCII character.
it actually got &lt;code&gt;invalid multibyte char (US-ASCII) error message&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;to solve this. I added this line to &lt;code&gt;.bashrc&lt;/code&gt; or &lt;code&gt;zshrc&lt;/code&gt; if you are using zsh&lt;/p&gt;

&lt;div class='bogus-wrapper'&gt;&lt;notextile&gt;&lt;figure class='code'&gt; &lt;div class='highlight bash'&gt;&lt;table&gt;&lt;tr&gt;&lt;td class='gutter'&gt;&lt;pre class='line-numbers'&gt;&lt;span class='line-number'&gt;1&lt;/span&gt;
&lt;span class='line-number'&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class='code'&gt;&lt;pre&gt;&lt;code class='bash'&gt;&lt;span class='line'&gt;  &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;LC_ALL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;en_US.UTF-8
&lt;/span&gt;&lt;span class='line'&gt;  &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;LANG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;en_US.UTF-8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;It should fix the problem now.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Testing ruby code with benchmark_suite</title>
   <link href="http://recursive-design.com/en/2012/01/testing-ruby-code-with-benchmark-suite.html"/>
   <updated>2012-01-14T12:04:00+07:00</updated>
   <id>http://recursive-design.com/en/2012/01/testing-ruby-code-with-benchmark-suite</id>
   <content type="html">&lt;p&gt;Just a couple days ago I found out &lt;a href=&quot;http://www.therubygame.com&quot; title=&quot;The Ruby Game&quot;&gt;therubygame.com&lt;/a&gt; which challenge us to
solve a problem with ruby. The result were measured by the &lt;strong&gt;fastest&lt;/strong&gt;, &lt;strong&gt;slowest&lt;/strong&gt;, &lt;strong&gt;shortest&lt;/strong&gt;, &lt;strong&gt;longest&lt;/strong&gt;,
&lt;strong&gt;cheaters&lt;/strong&gt; (yup there are also some rule).&lt;/p&gt;

&lt;p&gt;And also I was listening to an episode of ruby rouge on &lt;a href=&quot;http://rubyrogues.com/034-rr-benchmarking-and-profiling/&quot; title=&quot;034 RR Benchmarking and Profiling&quot;&gt;Benchmarking&lt;/a&gt;. And there is one tools called &lt;a href=&quot;http://rubygems.org/gems/benchmark_suite&quot; title=&quot;benchmark_suite&quot;&gt;benchmark_suite&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So there is this &lt;a href=&quot;http://www.therubygame.com/challenges/3/submissions&quot; title=&quot;Challenge #3&quot;&gt;challenge&lt;/a&gt; to capitalize first letter of every word. I want to compare my code to the fastest solution there.
so i installed the gem, also the &lt;a href=&quot;http://rubygems.org/gems/ffi&quot; title=&quot;ffi gem&quot;&gt;ruby-ffi&lt;/a&gt; gem that somewhat fix an error while I tried to run the benchmark.&lt;/p&gt;

&lt;p&gt;so this is the code to benchmark it&lt;/p&gt;

&lt;div class='bogus-wrapper'&gt;&lt;notextile&gt;&lt;figure class='code'&gt; &lt;div class='highlight ruby'&gt;&lt;table&gt;&lt;tr&gt;&lt;td class='gutter'&gt;&lt;pre class='line-numbers'&gt;&lt;span class='line-number'&gt;1&lt;/span&gt;
&lt;span class='line-number'&gt;2&lt;/span&gt;
&lt;span class='line-number'&gt;3&lt;/span&gt;
&lt;span class='line-number'&gt;4&lt;/span&gt;
&lt;span class='line-number'&gt;5&lt;/span&gt;
&lt;span class='line-number'&gt;6&lt;/span&gt;
&lt;span class='line-number'&gt;7&lt;/span&gt;
&lt;span class='line-number'&gt;8&lt;/span&gt;
&lt;span class='line-number'&gt;9&lt;/span&gt;
&lt;span class='line-number'&gt;10&lt;/span&gt;
&lt;span class='line-number'&gt;11&lt;/span&gt;
&lt;span class='line-number'&gt;12&lt;/span&gt;
&lt;span class='line-number'&gt;13&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class='code'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;&lt;span class='line'&gt;  &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;benchmark/ips&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class='line'&gt;
&lt;/span&gt;&lt;span class='line'&gt;  &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;The small brown &amp;amp; ginger fox JUMPED OVER the gate&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class='line'&gt;
&lt;/span&gt;&lt;span class='line'&gt;  &lt;span class=&quot;no&quot;&gt;Benchmark&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ips&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class='line'&gt;    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;report&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;first&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;span class='line'&gt;      &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gsub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/\w+/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;capitalize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class='line'&gt;    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class='line'&gt;
&lt;/span&gt;&lt;span class='line'&gt;    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;report&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;second&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;span class='line'&gt;      &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:capitalize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39; &amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class='line'&gt;    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class='line'&gt;  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;And here are the result&lt;/p&gt;

&lt;div class=&quot;well&quot;&gt;
  &lt;p&gt;first 55609.3 (±10.7%) i/s - 277202 in 5.048175s (cycle=4471) &lt;/p&gt;
  &lt;p&gt;second 77996.4 (±10.2%) i/s - 389844 in 5.055319s (cycle=6188)&lt;/p&gt;
&lt;/div&gt;


&lt;p&gt;The first code run &lt;strong&gt;55.609,3&lt;/strong&gt; times per second and the latter is &lt;strong&gt;77.996,4&lt;/strong&gt; times per second.
So the second code run more than the first code in one second. Which mean the second code is faster.&lt;/p&gt;

&lt;p&gt;Also the first code run &lt;strong&gt;277.202&lt;/strong&gt; times in &lt;strong&gt;5.048175&lt;/strong&gt; sec while the second code run &lt;strong&gt;389.844&lt;/strong&gt; times in &lt;strong&gt;5.05&lt;/strong&gt; sec&lt;/p&gt;

&lt;p&gt;So this mean, that &lt;strong&gt;regex is more slower&lt;/strong&gt; then calling capitalized on each element on array&lt;/p&gt;
</content>
 </entry>
 
 
</feed>